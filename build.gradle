buildscript {
    dependencies {
        classpath 'io.github.swagger2markup:swagger2markup-gradle-plugin:1.3.3'
        classpath 'org.asciidoctor:asciidoctorj-epub3:1.5.0-alpha.6'
    }
}

plugins {
    id 'org.springframework.boot' version '2.4.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

repositories {
    mavenCentral()
    maven {
        url repoUrl
        credentials {
            username repoUsername
            password repoPassword
        }
    }
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'idea'
apply plugin: 'maven-publish'

wrapper {
    gradleVersion = '6.8.3'
    distributionType = Wrapper.DistributionType.ALL
}

compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

ext {
    appVersion = project.hasProperty('appVersion') ? project.getProperty('appVersion') : currentVersion
    snippetsDir = 'build/libs/' + artifactIdVar +'-' + currentVersion + '.jar'
}

group = groupIdVar
version = appVersion
description = descriptionVar

bootJar {
    enabled = false
}

jar {
    enabled = true
}

dependencies {
    // Web
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Common
    implementation 'org.apache.commons:commons-io:1.3.2'
    implementation 'org.apache.commons:commons-collections4:4.3'
    implementation 'org.apache.commons:commons-lang3:3.8.1'

    // lombok
    implementation 'org.projectlombok:lombok:1.18.8'
    implementation 'org.junit.jupiter:junit-jupiter:5.4.2'
    annotationProcessor 'org.projectlombok:lombok:1.18.8'

}

publishing {
    publications {
        myPublication(MavenPublication) {
            groupId groupIdVar
            artifactId artifactIdVar
            version appVersion
            artifact snippetsDir
        }
    }

    // Repositories *to* which Gradle can publish artifacts
    repositories {
        maven {
            url publisherUrl
            credentials {
                username publisherUsername
                password publisherPassword
            }
        }
    }
}


test {
    useJUnitPlatform()
}

